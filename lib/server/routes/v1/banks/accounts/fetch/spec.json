{
	"schema": {
		"tags": ["Banks"],
		"description": "This route is used to fetch a Bank Account using its AccountName, SSN (Social Security Number) and BankName.",
		"summary": "Fetch a Bank Account using its AccountName, SSN (Social Security Number) and BankName",
		"headers": {
			"type": "object",
			"required": ["authorization"],
			"properties": {
				"authorization": {
					"type": "string",
					"pattern": "^(Bearer\\s)([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+/=]*)"
				}
			},
			"errorMessage": {
				"required": {
					"authorization": "'authorization' header missing"
				},
				"properties": {
					"authorization": "invalid format"
				}
			}
		},
		"params": {
			"type": "object",
			"additionalProperties": false,
			"required": ["accountName", "bankName", "ssn"],
			"properties": {
				"accountName": {
					"type": "string",
					"description": "The AccountName of the Bank Account to fetch.",
					"pattern": "^[a-zA-Z0-9\\-\\_]{1,}$",
					"minLength": 1,
					"maxLength": 50
				},
				"bankName": {
					"type": "string",
					"description": "The BankName of the Bank Account to fetch.",
					"pattern": "^[a-zA-Z0-9\\-\\_]{1,}$",
					"minLength": 1,
					"maxLength": 50
				},
				"ssn": {
					"type": "string",
					"description": "The Social Security Number of the Bank Account to fetch.",
					"pattern": "^[0-9]{3}-[0-9]{2}-[0-9]{4}$"
				}
			},
			"errorMessage": {
				"type": "invalid payload: not in the desired format",
				"properties": {
					"accountName": "invalid accountName: must be a string, must match the pattern /^[a-zA-Z0-9\\-\\_]{1,}$/ and must be between 1 and 50 characters long",
					"bankName": "invalid bankName: must be a string, must match the pattern /^[a-zA-Z0-9\\-\\_]{1,}$/ and must be between 1 and 50 characters long",
					"ssn": "invalid ssn: must be a string, must match the pattern /^[0-9]{3}-[0-9]{2}-[0-9]{4}$/"
				},
				"required": {
					"accountName": "'accountName' is required",
					"bankName": "'bankName' is required",
					"ssn": "'ssn' is required"
				},
				"additionalProperties": "invalid payload: extra fields found"
			}
		},
		"response": {
			"200": {
				"description": "Successful Bank Account fetch response",
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean",
						"description": "Indicates whether the Bank Account was successfully fetched or not."
					},
					"message": {
						"type": "string",
						"description": "A message describing the result of the Bank Account fetch."
					},
					"data": {
						"type": "object",
						"properties": {
							"bankAccount": {
								"description": "The Bank Account fetched.",
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"format": "uuid"
									},
									"bankId": {
										"type": "string",
										"format": "uuid"
									},
									"accountName": {
										"type": "string"
									},
									"ssn": {
										"type": "string"
									},
									"balance": {
										"type": "number"
									},
									"lastWithdrawal": {
										"type": "string",
										"format": "date-time"
									},
									"lastDeposit": {
										"type": "string",
										"format": "date-time"
									},
									"bank": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string",
												"format": "uuid"
											},
											"name": {
												"type": "string"
											},
											"logoUrl": {
												"type": "string",
												"format": "uri"
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											},
											"updatedAt": {
												"type": "string",
												"format": "date-time"
											}
										}
									},
									"transactions": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"format": "uuid"
												},
												"bankAccountId": {
													"type": "string",
													"format": "uuid"
												},
												"amount": {
													"type": "number"
												},
												"isWithdrawal": {
													"type": "boolean"
												},
												"isDeposit": {
													"type": "boolean"
												},
												"createdAt": {
													"type": "string",
													"format": "date-time"
												},
												"updatedAt": {
													"type": "string",
													"format": "date-time"
												}
											}
										}
									},
									"createdAt": {
										"type": "string",
										"format": "date-time"
									},
									"updatedAt": {
										"type": "string",
										"format": "date-time"
									}
								}
							}
						}
					}
				}
			},
			"4xx": {
				"description": "Failure due to bad input or auth.",
				"type": "object",
				"properties": {
					"error": {
						"type": "string",
						"default": "Bad Request"
					},
					"message": {
						"type": "string",
						"default": "Invalid input, auth, parameters etc."
					},
					"statusCode": {
						"type": "integer",
						"default": 400
					}
				}
			},
			"5xx": {
				"description": "Failure on the service side.",
				"type": "object",
				"properties": {
					"error": {
						"type": "string",
						"default": "Internal Server Error"
					},
					"message": {
						"type": "string",
						"default": "Something went wrong."
					},
					"statusCode": {
						"type": "integer",
						"default": 500
					}
				}
			}
		}
	}
}
