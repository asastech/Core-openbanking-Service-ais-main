{
	"schema": {
		"tags": ["Banks"],
		"description": "This route is to be used when a Bank must be created. A Bank is a legal entity (mocked) with financial records of people's transactions.",
		"summary": "Creates a new Bank",
		"headers": {
			"type": "object",
			"required": ["authorization"],
			"properties": {
				"authorization": {
					"type": "string",
					"pattern": "^(Bearer\\s)([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+/=]*)"
				}
			},
			"errorMessage": {
				"required": {
					"authorization": "'authorization' header missing"
				},
				"properties": {
					"authorization": "invalid format"
				}
			}
		},
		"body": {
			"type": "object",
			"additionalProperties": false,
			"required": ["name", "logoUrl"],
			"properties": {
				"name": {
					"type": "string",
					"pattern": "^[a-zA-Z0-9_\\-\\s]{3,}$"
				},
				"logoUrl": {
					"type": "string",
					"format": "uri"
				}
			},
			"errorMessage": {
				"type": "invalid payload: not in the desired format",
				"properties": {
					"name": "invalid format: must be at least 3 characters long and contain only letters, numbers, spaces, dashes and underscores",
					"logoUrl": "invalid format: must be a valid URI"
				},
				"required": {
					"name": "'name' is a required property",
					"logoUrl": "'logoUrl' is a required property"
				},
				"additionalProperties": "invalid payload: extra fields found"
			}
		},
		"response": {
			"200": {
				"description": "Successful Bank Create response.",
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean",
						"description": "Indicates the state of the performed operation. Could return `false` if the request succeeded, but failed while attempting to do other operations."
					},
					"message": {
						"type": "string",
						"description": "Returns some information on the state of the performed operation."
					}
				}
			},
			"4xx": {
				"description": "Failure due to bad input or auth.",
				"type": "object",
				"properties": {
					"error": {
						"type": "string",
						"default": "Bad Request"
					},
					"message": {
						"type": "string",
						"default": "Invalid input, auth, parameters etc."
					},
					"statusCode": {
						"type": "integer",
						"default": 400
					}
				}
			},
			"5xx": {
				"description": "Failure on the service side.",
				"type": "object",
				"properties": {
					"error": {
						"type": "string",
						"default": "Internal Server Error"
					},
					"message": {
						"type": "string",
						"default": "Something went wrong."
					},
					"statusCode": {
						"type": "integer",
						"default": 500
					}
				}
			}
		}
	}
}
