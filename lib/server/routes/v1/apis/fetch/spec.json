{
	"schema": {
		"tags": ["APIs"],
		"description": "This route is to used to fetch an API by its ID.",
		"summary": "Fetch an API by its ID",
		"params": {
			"type": "object",
			"additionalProperties": false,
			"required": ["apiId"],
			"properties": {
				"apiId": {
					"type": "string",
					"format": "uuid"
				}
			},
			"errorMessage": {
				"type": "invalid payload: not in the desired format",
				"properties": {
					"apiId": "invalid apiId: must be a valid UUID"
				},
				"required": {
					"apiId": "'apiId' is a required property"
				},
				"additionalProperties": "invalid payload: extra fields found"
			}
		},
		"response": {
			"200": {
				"description": "Successfully fetched the API",
				"type": "object",
				"properties": {
					"success": {
						"type": "boolean",
						"description": "Indicates the state of the performed operation. Could return `false` if the request succeeded, but failed while attempting to do other operations."
					},
					"message": {
						"type": "string",
						"description": "Returns some information on the state of the performed operation."
					},
					"data": {
						"type": "object",
						"properties": {
							"api": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"format": "uuid"
									},
									"name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"version": {
										"type": "string"
									},
									"context": {
										"type": "string"
									},
									"visibility": {
										"type": "string",
										"enum": ["PUBLIC", "PRIVATE"]
									},
									"isEnabled": {
										"type": "boolean"
									},
									"isProtected": {
										"type": "boolean"
									},
									"subscriptionRequired": {
										"type": "boolean"
									},
									"createdAt": {
										"type": "string",
										"format": "date-time"
									},
									"updatedAt": {
										"type": "string",
										"format": "date-time"
									}
								}
							}
						}
					}
				}
			},
			"4xx": {
				"description": "Failure due to bad input or auth.",
				"type": "object",
				"properties": {
					"error": {
						"type": "string",
						"default": "Bad Request"
					},
					"message": {
						"type": "string",
						"default": "Invalid input, auth, parameters etc."
					},
					"statusCode": {
						"type": "integer",
						"default": 400
					}
				}
			},
			"5xx": {
				"description": "Failure on the service side.",
				"type": "object",
				"properties": {
					"error": {
						"type": "string",
						"default": "Internal Server Error"
					},
					"message": {
						"type": "string",
						"default": "Something went wrong."
					},
					"statusCode": {
						"type": "integer",
						"default": 500
					}
				}
			}
		}
	}
}
